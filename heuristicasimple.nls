;VERSION FINAL
globals[ _FOUNDNEARESTDUST _MOVEDBECAUSERIGHT _ISLEFTPATCHDUSTY _ISAHEADDUSTY _WHITEPATCHCOUNTER _RIGHTTURNCOUNTER _ISINSIDEBORDERRELATIVE _DIR _FOUNDDIR _NEXTDIR _NEXTDIRCOUNT _TURNVACUUM _CURRENTX _CURRENTY]; obstaculo]

to move-vacuum-simple-heuristic
  move-forward
end

;; no lo esta haciendo bien porque cuando se usa find-nearest-dust no quedamos viendo para la direccion correcta.
to move-forward
  vacuum-patch
  if(not is-left-patch-obstacle-or-white)
  [ask turtles[left 90] set _WHITEPATCHCOUNTER 0]
  ifelse(is-left-patch-obstacle-or-white)
  [
     ifelse(is-patch-ahead-dusty)
     [ask turtles[fd 1] set _WHITEPATCHCOUNTER 0]
     [ask turtles[right 90] set _WHITEPATCHCOUNTER (_WHITEPATCHCOUNTER + 1)]
  ]
  [
    ask turtles[right 90]
    set _WHITEPATCHCOUNTER (_WHITEPATCHCOUNTER + 1)
  ]
  if(_WHITEPATCHCOUNTER > 3)
  [find-nearest-dust-heuristic set _WHITEPATCHCOUNTER 0]
end

to-report is-left-patch-obstacle-or-white
  
  ask turtles[left 90]
  ifelse(is-patch-ahead-obstacle or is-patch-ahead-white)
   [set _ISLEFTPATCHDUSTY true]
   [set _ISLEFTPATCHDUSTY false]
  ask turtles[right 90]
  
  report _ISLEFTPATCHDUSTY
end

to-report is-patch-ahead-obstacle
  ask turtles[
  ask patch-ahead 1[
    ifelse(pcolor = 32)
        [set _ISAHEADDUSTY true]
        [set _ISAHEADDUSTY false]
  ]]
  report _ISAHEADDUSTY
end

to-report is-patch-ahead-white
  ask turtles[
  ask patch-ahead 1[
    ifelse(pcolor = white)
        [set _ISAHEADDUSTY true]
        [set _ISAHEADDUSTY false]
  ]]
  report _ISAHEADDUSTY
end

to-report is-patch-ahead-dusty
  ask turtles[
  ask patch-ahead 1[
    ifelse(pcolor = brown)
        [set _ISAHEADDUSTY true]
        [set _ISAHEADDUSTY false]
  ]]
  report _ISAHEADDUSTY
end

to-report is-patch-ahead-possible
  ask turtles[
  ask patch-ahead 1[
    ifelse(pcolor = brown or pcolor = white)
        [set _ISAHEADDUSTY true]
        [set _ISAHEADDUSTY false]
  ]]
  report _ISAHEADDUSTY
end

; Encuentra el patch sucio mas cercano a la posicion actual de la aspiradora
to find-nearest-dust-heuristic
  ask turtles[
    let target-patch min-one-of (patches in-radius 25 with [pcolor = brown]) [distance myself]
    if target-patch != nobody  [
      show "find nearest dust"
      ;show "SHould i actually be here?: find-nearest-dust"
      ;falta verificar aca que si hay un obstaculo entonces que se cambie la direccion de la tortuga: patch-ahead
      face target-patch fd 1
      ifelse(ycor < 0)
      [set heading _LEFT]
      [set heading _RIGHT]
      ; move-to target-patch
    ]
  ]
end